name: A workflow for my Hello World App
on:
  push:
    branches:
      - master

jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Unit Tests
        run: |
            mvn -Dtest=com.napier.sem.AppTest test
            mvn -Dtest=com.napier.sem.CapitalTest test
            mvn -Dtest=com.napier.sem.CityTest test
            mvn -Dtest=com.napier.sem.CountryTest test
            mvn -Dtest=com.napier.sem.PopulationTest test

  IntegrationTests:
    name: Integration Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Integration Tests
        run: |
          docker build -t database ./db 
          docker run --name world -dp 33060:3306 database
          mvn -Dtest=com.napier.sem.AppIntegrationTest test
          docker stop world
          docker rm world
          docker image rm database
  build:
    name: Build Run in Docker and Deploy Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Package and Run docker compose
        run: |
          mvn package -DskipTests
          docker-compose up --abort-on-container-exit

      # Manually create release tag using GitHub API
      - name: Create Release Tag
        run: |
          tag=$(date +'%Y%m%d%H%M%S')
          echo "Creating release tag: $tag"
          curl -X POST -H "Accept: application/vnd.github.v3+json" \
               -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/releases \
               -d "{\"tag_name\":\"$tag\",\"name\":\"Release $tag\",\"draft\":false,\"prerelease\":false}"

      # Upload artifact (JAR file) to the release
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-artifact
          path: ./target/seMethods.jar
      # Create release note
      - name: Create Release Note
        run: echo "Release note for version ${{ steps.create_release.outputs.release_id }}" > release-note.txt

      # Upload release note as asset
      - name: Upload Release Note
        uses: actions/upload-release-asset@v1
        with:
          upload_url: https://uploads.github.com/repos/${{ meglou752/SEM-Group-Project }}/releases/${{ steps.create_release.outputs.release_id }}/assets?name=release-note.txt
          asset_path: ./release-note.txt
          asset_name: release-note.txt
          asset_content_type: text/plain